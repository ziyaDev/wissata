// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode = "prisma"
  
}

generator client {
   previewFeatures = ["fullTextSearch", "fullTextIndex"]
  provider = "prisma-client-js"
}

model Users {
  id       String @id @unique @default(cuid())
  userName String @unique
  firstName String
  lastName String
  password String
  role     String
  createdAt DateTime @default(now()) @db.Timestamptz(3)
  }


model Reception {
  id Int @id @unique @default(autoincrement())
  fullName String
  docNumber String?
  grades String
  town String
  city String
  note String?
  petitionHasFiled Boolean
  gradesType   String?
  sector String?
  unstutation String?
  subject String?
  ministry String
  typePlaint String?
  subjectPlaint String?
  submited   Boolean @default(false)
  visited Visit[]
  createdAt DateTime @default(now()) @db.Timestamptz(3)
}
 
model Visit {
  id Int @id @unique @default(autoincrement())
  reception   Reception @relation(fields: [receptionId], references: [id])
  receptionId Int
  date DateTime @db.Timestamptz(3) 
  note String?
  @@index([receptionId])
}
model Tasks {
  id Int @id @unique @default(autoincrement())
  createdBy  String 
  users String[]
  title String
  description String?
  finishedAt DateTime? @db.Timestamptz(3)
  status  String @default("pending")
  createdAt DateTime @default(now()) @db.Timestamptz(3)
}


model Plainte {
  id               String @id @unique @default(cuid())
  fullName    String
  city            String
  town             String
  ministry      String
  unstutation String?
  typePlaint           String?
  subjectPlaint String?
  grades String
  sourcePlaint String?
  correspondenceNumber String
  gradesType   String?
  correspondenceDate   DateTime @default(now()) @db.Timestamptz(3)
  createdAt DateTime @default(now()) @db.Timestamptz(3)

  filesRelated    String?
  recipients  PlainteRecipients[]

}

model PlainteRecipients {
    id               String @id @unique @default(cuid())
  plainte   Plainte @relation(fields: [plainteId], references: [id])
  plainteId String

   sector String?
      reciption String?
      town String?
      save Boolean?


  @@index([plainteId])
}

